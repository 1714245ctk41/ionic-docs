{
  "filePath": "./src/components/note/note.tsx",
  "encapsulation": "shadow",
  "tag": "ion-note",
  "readme": "# ion-note\n\nNotes are text elements generally used as subtitles that provide more information. Notes are styled to appear grey by default. Notes can be used in an item as metadata text.\n\n",
  "docs": "Notes are text elements generally used as subtitles that provide more information. Notes are styled to appear grey by default. Notes can be used in an item as metadata text.",
  "docsTags": [
    {
      "text": "{\"ios\" | \"md\"} mode - The mode determines which platform styles to use.",
      "name": "virtualProp"
    }
  ],
  "usage": {
    "angular": "```html\n<!-- Default Note -->\n<ion-note>Default Note</ion-note>\n\n<!-- Note Colors -->\n<ion-note color=\"primary\">Primary Note</ion-note>\n<ion-note color=\"secondary\">Secondary Note</ion-note>\n<ion-note color=\"danger\">Danger Note</ion-note>\n<ion-note color=\"light\">Light Note</ion-note>\n<ion-note color=\"dark\">Dark Note</ion-note>\n\n<!-- Notes in a List -->\n<ion-list>\n  <ion-item>\n    <ion-label>Note (End)</ion-label>\n    <ion-note slot=\"end\">On</ion-note>\n  </ion-item>\n\n  <ion-item>\n    <ion-note slot=\"start\">Off</ion-note>\n    <ion-label>Note (Start)</ion-label>\n  </ion-item>\n</ion-list>\n```\n",
    "javascript": "```html\n<!-- Default Note -->\n<ion-note>Default Note</ion-note>\n\n<!-- Note Colors -->\n<ion-note color=\"primary\">Primary Note</ion-note>\n<ion-note color=\"secondary\">Secondary Note</ion-note>\n<ion-note color=\"danger\">Danger Note</ion-note>\n<ion-note color=\"light\">Light Note</ion-note>\n<ion-note color=\"dark\">Dark Note</ion-note>\n\n<!-- Notes in a List -->\n<ion-list>\n  <ion-item>\n    <ion-label>Note (End)</ion-label>\n    <ion-note slot=\"end\">On</ion-note>\n  </ion-item>\n\n  <ion-item>\n    <ion-note slot=\"start\">Off</ion-note>\n    <ion-label>Note (Start)</ion-label>\n  </ion-item>\n</ion-list>\n```\n",
    "react": "```tsx\nimport React from 'react';\nimport { IonNote, IonList, IonItem, IonLabel, IonContent } from '@ionic/react';\n\nexport const NoteExample: React.FC = () => (\n  <IonContent>\n    {/*-- Default Note --*/}\n    <IonNote>Default Note</IonNote><br />\n\n    {/*-- Note Colors --*/}\n    <IonNote color=\"primary\">Primary Note</IonNote><br />\n    <IonNote color=\"secondary\">Secondary Note</IonNote><br />\n    <IonNote color=\"danger\">Danger Note</IonNote><br />\n    <IonNote color=\"light\">Light Note</IonNote><br />\n    <IonNote color=\"dark\">Dark Note</IonNote><br />\n\n    {/*-- Notes in a List --*/}\n    <IonList>\n      <IonItem>\n        <IonLabel>Note (End)</IonLabel>\n        <IonNote slot=\"end\">On</IonNote>\n      </IonItem>\n\n      <IonItem>\n        <IonNote slot=\"start\">Off</IonNote>\n        <IonLabel>Note (Start)</IonLabel>\n      </IonItem>\n    </IonList>\n  </IonContent>\n);\n```",
    "stencil": "```tsx\nimport { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'note-example',\n  styleUrl: 'note-example.css'\n})\nexport class NoteExample {\n  render() {\n    return [\n      // Default Note\n      <ion-note>Default Note</ion-note>,\n\n      // Note Colors\n      <ion-note color=\"primary\">Primary Note</ion-note>,\n      <ion-note color=\"secondary\">Secondary Note</ion-note>,\n      <ion-note color=\"danger\">Danger Note</ion-note>,\n      <ion-note color=\"light\">Light Note</ion-note>,\n      <ion-note color=\"dark\">Dark Note</ion-note>,\n\n      // Notes in a List\n      <ion-list>\n        <ion-item>\n          <ion-label>Note (End)</ion-label>\n          <ion-note slot=\"end\">On</ion-note>\n        </ion-item>\n\n        <ion-item>\n          <ion-note slot=\"start\">Off</ion-note>\n          <ion-label>Note (Start)</ion-label>\n        </ion-item>\n      </ion-list>\n    ];\n  }\n}\n```\n",
    "vue": "```html\n<template>\n  <!-- Default Note -->\n  <ion-note>Default Note</ion-note>\n\n  <!-- Note Colors -->\n  <ion-note color=\"primary\">Primary Note</ion-note>\n  <ion-note color=\"secondary\">Secondary Note</ion-note>\n  <ion-note color=\"danger\">Danger Note</ion-note>\n  <ion-note color=\"light\">Light Note</ion-note>\n  <ion-note color=\"dark\">Dark Note</ion-note>\n\n  <!-- Notes in a List -->\n  <ion-list>\n    <ion-item>\n      <ion-label>Note (End)</ion-label>\n      <ion-note slot=\"end\">On</ion-note>\n    </ion-item>\n\n    <ion-item>\n      <ion-note slot=\"start\">Off</ion-note>\n      <ion-label>Note (Start)</ion-label>\n    </ion-item>\n  </ion-list>\n</template>\n\n<script>\nimport { IonItem, IonLabel, IonList, IonNote } from '@ionic/vue';\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  components: { IonItem, IonLabel, IonList, IonNote }\n});\n</script>\n```\n"
  },
  "props": [
    {
      "name": "color",
      "type": "string | undefined",
      "mutable": false,
      "attr": "color",
      "reflectToAttr": false,
      "docs": "The color to use from your application's color palette.\nDefault options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\nFor more information on colors, see [theming](/docs/theming/basics).",
      "docsTags": [],
      "values": [
        {
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "values": [
        {
          "value": "ios",
          "type": "string"
        },
        {
          "value": "md",
          "type": "string"
        }
      ],
      "optional": true,
      "required": false
    }
  ],
  "methods": [],
  "events": [],
  "listeners": [],
  "styles": [
    {
      "name": "--color",
      "annotation": "prop",
      "docs": "Color of the note"
    }
  ],
  "slots": [],
  "parts": [],
  "dependents": [],
  "dependencies": [],
  "dependencyGraph": {}
}