{
  "filePath": "./src/components/header/header.tsx",
  "encapsulation": "none",
  "tag": "ion-header",
  "readme": "# ion-header\n\nHeader is a parent component that holds the toolbar component.\nIt's important to note that ion-header needs to be the one of the three root elements of a page\n\n\n",
  "docs": "Header is a parent component that holds the toolbar component.\nIt's important to note that ion-header needs to be the one of the three root elements of a page",
  "docsTags": [
    {
      "text": "{\"ios\" | \"md\"} mode - The mode determines which platform styles to use.",
      "name": "virtualProp"
    }
  ],
  "usage": {
    "angular": "```html\n<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>My Navigation Bar</ion-title>\n  </ion-toolbar>\n\n  <ion-toolbar>\n    <ion-title>Subheader</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<!-- Header without a border -->\n<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-title>Header - No Border</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">My Navigation Bar</ion-title>\n    </ion-toolbar>\n  </ion-header>\n</ion-content>\n```\n",
    "javascript": "```html\n<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>My Navigation Bar</ion-title>\n  </ion-toolbar>\n\n  <ion-toolbar>\n    <ion-title>Subheader</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<!-- Header without a border -->\n<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-title>Header - No Border</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">My Navigation Bar</ion-title>\n    </ion-toolbar>\n  </ion-header>\n</ion-content>\n```\n",
    "react": "```tsx\nimport React from 'react';\nimport { IonHeader, IonContent, IonToolbar, IonButtons, IonBackButton, IonTitle } from '@ionic/react';\n\nexport const HeaderExample: React.FC = () => (\n  <>\n    <IonHeader>\n      <IonToolbar>\n        <IonButtons slot=\"start\">\n          <IonBackButton defaultHref=\"/\" />\n        </IonButtons>\n        <IonTitle>My Navigation Bar</IonTitle>\n      </IonToolbar>\n    \n      <IonToolbar>\n        <IonTitle>Subheader</IonTitle>\n      </IonToolbar>\n    </IonHeader>\n    \n    {/*-- Header without a border --*/}\n    <IonHeader className=\"ion-no-border\">\n     <IonToolbar>\n      <IonTitle>Header - No Border</IonTitle>\n     </IonToolbar>\n    </IonHeader>\n    \n    <IonContent>\n      <IonHeader collapse=\"condense\">\n        <IonToolbar>\n          <IonTitle size=\"large\">My Navigation Bar</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n    </IonContent>\n  </>\n);\n```",
    "stencil": "```tsx\nimport { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'header-example',\n  styleUrl: 'header-example.css'\n})\nexport class HeaderExample {\n  render() {\n    return [\n      <ion-header>\n        <ion-toolbar>\n          <ion-buttons slot=\"start\">\n            <ion-back-button></ion-back-button>\n          </ion-buttons>\n          <ion-title>My Navigation Bar</ion-title>\n        </ion-toolbar>\n\n        <ion-toolbar>\n          <ion-title>Subheader</ion-title>\n        </ion-toolbar>\n      </ion-header>,\n\n      // Header without a border\n      <ion-header class=\"ion-no-border\">\n        <ion-toolbar>\n          <ion-title>Header - No Border</ion-title>\n        </ion-toolbar>\n      </ion-header>,\n\n      <ion-content>\n        <ion-header collapse=\"condense\">\n          <ion-toolbar>\n            <ion-title size=\"large\">My Navigation Bar</ion-title>\n          </ion-toolbar>\n        </ion-header>\n      </ion-content>\n    ];\n  }\n}\n```\n",
    "vue": "```html\n<template>\n  <ion-header>\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-back-button></ion-back-button>\n      </ion-buttons>\n      <ion-title>My Navigation Bar</ion-title>\n    </ion-toolbar>\n  \n    <ion-toolbar>\n      <ion-title>Subheader</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  \n  <!-- Header without a border -->\n  <ion-header class=\"ion-no-border\">\n    <ion-toolbar>\n      <ion-title>Header - No Border</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  \n  <ion-content>\n    <ion-header collapse=\"condense\">\n      <ion-toolbar>\n        <ion-title size=\"large\">My Navigation Bar</ion-title>\n      </ion-toolbar>\n    </ion-header>\n  </ion-content>\n</template>\n```\n"
  },
  "props": [
    {
      "name": "collapse",
      "type": "\"condense\" | undefined",
      "mutable": false,
      "attr": "collapse",
      "reflectToAttr": false,
      "docs": "Describes the scroll effect that will be applied to the header\n`condense` only applies in iOS mode.\n\nTypically used for [Collapsible Large Titles](https://ionicframework.com/docs/api/title#collapsible-large-titles)",
      "docsTags": [],
      "values": [
        {
          "value": "condense",
          "type": "string"
        },
        {
          "type": "undefined"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "mode",
      "type": "\"ios\" | \"md\"",
      "mutable": false,
      "attr": "mode",
      "reflectToAttr": false,
      "docs": "The mode determines which platform styles to use.",
      "docsTags": [],
      "values": [
        {
          "value": "ios",
          "type": "string"
        },
        {
          "value": "md",
          "type": "string"
        }
      ],
      "optional": true,
      "required": false
    },
    {
      "name": "translucent",
      "type": "boolean",
      "mutable": false,
      "attr": "translucent",
      "reflectToAttr": false,
      "docs": "If `true`, the header will be translucent.\nOnly applies when the mode is `\"ios\"` and the device supports\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n\nNote: In order to scroll content behind the header, the `fullscreen`\nattribute needs to be set on the content.",
      "docsTags": [],
      "default": "false",
      "values": [
        {
          "type": "boolean"
        }
      ],
      "optional": false,
      "required": false
    }
  ],
  "methods": [],
  "events": [],
  "listeners": [],
  "styles": [],
  "slots": [],
  "parts": [],
  "dependents": [],
  "dependencies": [],
  "dependencyGraph": {}
}